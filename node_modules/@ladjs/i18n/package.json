{
  "_args": [
    [
      {
        "raw": "@ladjs/i18n@^0.2.0",
        "scope": "@ladjs",
        "escapedName": "@ladjs%2fi18n",
        "name": "@ladjs/i18n",
        "rawSpec": "^0.2.0",
        "spec": ">=0.2.0 <0.3.0",
        "type": "range"
      },
      "/home/larisa/Documents/weather-api/node_modules/email-templates"
    ]
  ],
  "_from": "@ladjs/i18n@>=0.2.0 <0.3.0",
  "_id": "@ladjs/i18n@0.2.0",
  "_inCache": true,
  "_location": "/@ladjs/i18n",
  "_nodeVersion": "8.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/i18n-0.2.0.tgz_1513934651772_0.1811897298321128"
  },
  "_npmUser": {
    "name": "niftylettuce",
    "email": "niftylettuce@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@ladjs/i18n@^0.2.0",
    "scope": "@ladjs",
    "escapedName": "@ladjs%2fi18n",
    "name": "@ladjs/i18n",
    "rawSpec": "^0.2.0",
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/email-templates"
  ],
  "_resolved": "https://registry.npmjs.org/@ladjs/i18n/-/i18n-0.2.0.tgz",
  "_shasum": "dfc30eaa6a99918471aa9b69128f255a1267f29b",
  "_shrinkwrap": null,
  "_spec": "@ladjs/i18n@^0.2.0",
  "_where": "/home/larisa/Documents/weather-api/node_modules/email-templates",
  "author": {
    "name": "Nick Baugh",
    "email": "niftylettuce@gmail.com",
    "url": "http://niftylettuce.com/"
  },
  "ava": {
    "failFast": true,
    "verbose": true
  },
  "bugs": {
    "url": "https://github.com/ladjs/i18n/issues",
    "email": "niftylettuce@gmail.com"
  },
  "contributors": [
    {
      "name": "Nick Baugh",
      "email": "niftylettuce@gmail.com",
      "url": "http://niftylettuce.com/"
    }
  ],
  "dependencies": {
    "auto-bind": "^1.1.0",
    "boolean": "^0.1.3",
    "boom": "5.2.0",
    "country-language": "^0.1.7",
    "i18n": "^0.8.3",
    "i18n-locales": "^0.0.2",
    "lodash": "^4.17.4",
    "moment": "^2.18.1",
    "qs": "^6.5.1",
    "underscore.string": "^3.3.4"
  },
  "description": "i18n wrapper and Koa middleware for Lad",
  "devDependencies": {
    "ava": "^0.24.0",
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "codecov": "^3.0.0",
    "cross-env": "^5.0.5",
    "debug": "^3.1.0",
    "eslint": "^4.5.0",
    "eslint-config-prettier": "^2.3.0",
    "eslint-plugin-prettier": "^2.2.0",
    "husky": "^0.14.3",
    "koa": "^2.4.1",
    "koa-generic-session": "^2.0.0",
    "lint-staged": "^6.0.0",
    "nyc": "^11.1.0",
    "prettier": "^1.6.1",
    "remark-cli": "^4.0.0",
    "remark-preset-github": "^0.0.7",
    "sinon": "^4.1.3",
    "supertest": "^3.0.0",
    "xo": "^0.19.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-e9gkXFmpoAJfX4louxiX07Yawv8vNEoxvekK0AYWK2HKOFNSNxeJKjNJ80B6CKt1z42P7AESFw17TIsMUMwSqg==",
    "shasum": "dfc30eaa6a99918471aa9b69128f255a1267f29b",
    "tarball": "https://registry.npmjs.org/@ladjs/i18n/-/i18n-0.2.0.tgz"
  },
  "engines": {
    "node": ">=6.4.0"
  },
  "files": [
    "lib",
    "locales"
  ],
  "gitHead": "37646811deb762a38f0836b4ddab1f0e06ff53ad",
  "homepage": "https://github.com/ladjs/i18n",
  "keywords": [
    "@ladjs/i18n",
    "lass"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,jsx,mjs,ts,tsx,css,less,scss,json,graphql}": [
      "prettier --write --single-quote --trailing-comma none",
      "git add"
    ],
    "*.md": [
      "remark . -qfo",
      "git add"
    ]
  },
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "vkarpov15",
      "email": "val@karpov.io"
    },
    {
      "name": "omgimalexis",
      "email": "xo@wvvw.me"
    },
    {
      "name": "niftylettuce",
      "email": "niftylettuce@gmail.com"
    }
  ],
  "name": "@ladjs/i18n",
  "optionalDependencies": {},
  "readme": "# [**@ladjs/i18n**](https://github.com/ladjs/i18n)\n\n[![build status](https://img.shields.io/travis/ladjs/i18n.svg)](https://travis-ci.org/ladjs/i18n)\n[![code coverage](https://img.shields.io/codecov/c/github/ladjs/i18n.svg)](https://codecov.io/gh/ladjs/i18n)\n[![code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\n[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![made with lass](https://img.shields.io/badge/made_with-lass-95CC28.svg)](https://lass.js.org)\n[![license](https://img.shields.io/github/license/ladjs/i18n.svg)](<>)\n\n> i18n wrapper and Koa middleware for Lad\n\n\n## Table of Contents\n\n* [Install](#install)\n* [Usage](#usage)\n* [API](#api)\n  * [i18n.translate(key, locale)](#i18ntranslatekey-locale)\n  * [i18n.middleware(ctx, next)](#i18nmiddlewarectx-next)\n  * [i18n.redirect(ctx, next)](#i18nredirectctx-next)\n* [Options](#options)\n* [Contributors](#contributors)\n* [License](#license)\n\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install @ladjs/i18n\n```\n\n[yarn][]:\n\n```sh\nyarn add @ladjs/i18n\n```\n\n\n## Usage\n\n```js\nconst I18N = require('@ladjs/i18n');\nconst phrases = { 'HELLO': 'Hello there!' };\nconst i18n = new I18N({ phrases });\n\n// ...\n\napp.use(i18n.middleware);\napp.use(i18n.redirect);\n\n// ... routes go here ...\n\napp.listen();\n```\n\n\n## API\n\n### i18n.translate(key, locale)\n\nReturns translation for phrase `key` with the given `locale`.\n\n### i18n.middleware(ctx, next)\n\nThis middleware uses custom locale detection (in order of priority):\n\n1. Check URL (e.g. if `/de` or `/de/` then it's a `de` locale - as long as `de` is a supported locale)\n2. Check the `\"locale\"` cookie value (or whatever the `cookie` option is defined as)\n3. Check `Accept-Language` header\n\nIt also exposes the following:\n\n* `ctx.pathWithoutLocale` - the `ctx.path` without the locale in it (this is used by [koa-meta][])\n* `ctx.req` - with all of `i18n` API methods (e.g. `ctx.req.t`, `ctx.req.tn`, ...)\n* `ctx.locale` - set to the value of `ctx.req.locale` (the current user's locale)\n* `ctx.state` - with all of `i18n` API methods (e.g. `ctx.req.t`, `ctx.req.tn`, ...)\n* `ctx.state.l` - a shorthand method that accepts a path and returns a localized path (e.g. `ctx.state.l('/contact')` will output `/en/contact` if the locale is \"en\")\n* `ctx.state.availableLanguages` (Array) - which is useful for adding a dropdown to select from an available language\n* `ctx.state.currentLanguage` (String) - the current locale's language in native language using [country-language][]'s `getLanguage` method.\n* `ctx.translate` (Function) - a helper function for calling `i18n.api.t` to translate a given phrase (same as `i18n.translate` except it throws a `ctx.throw` error using [Boom][])\n\nIf the given locale was not available then it will redirect the user to the detected (or default/fallback) locale.\n\n### i18n.redirect(ctx, next)\n\n> Inspired by [node][]'s [language support][language-support].\n\nRedirects user with permanent `302` redirect to their detected locale if a valid language was not found for them.\n\nIt also sets the cookie `locale` for future requests to their detected locale.\n\nThis also stores the `last_locale` for a user via `ctx.state.user.save()`.\n\n\n## Options\n\n> We use [i18n][] options per <https://github.com/mashpie/i18n-node#list-of-all-configuration-options>\n\nDefault options are as follows and can be overridden:\n\n```js\nconst i18n = new I18N({\n  phrases: {},\n  logger: console,\n  directory: resolve('locales'),\n  locales: ['en', 'es', 'zh'],\n  cookie: 'locale',\n  indent: '  ',\n  defaultLocale: 'en',\n  // uses truthy `process.env.I18N_SYNC_FILES`\n  syncFiles: false,\n  // uses truthy `process.env.I18N_AUTO_RELOAD`\n  autoReload: false,\n  // uses truthy `process.env.I18N_UPDATE_FILES`\n  updateFiles: false,\n  api: {\n    __: 't',\n    __n: 'tn',\n    __l: 'tl',\n    __h: 'th',\n    __mf: 'tmf'\n  },\n  register: i18n.api\n});\n```\n\nNote that we automatically bind `logDebugFn`, `logWarnFn`, and `logErrorFn` for [i18n][] options to `logger.debug`, `logger.warn`, and `logger.error` respectively.\n\nFor a list of all available locales see [i18n-locales][].\n\n\n## Contributors\n\n| Name           | Website                    |\n| -------------- | -------------------------- |\n| **Nick Baugh** | <http://niftylettuce.com/> |\n\n\n## License\n\n[MIT](LICENSE) Â© [Nick Baugh](http://niftylettuce.com/)\n\n\n## \n\n[npm]: https://www.npmjs.com/\n\n[yarn]: https://yarnpkg.com/\n\n[i18n]: https://github.com/mashpie/i18n-node\n\n[i18n-locales]: https://github.com/ladjs/i18n-locales\n\n[koa-meta]: https://github.com/ladjs/koa-meta\n\n[country-language]: https://github.com/bdswiss/country-language\n\n[boom]: https://github.com/hapijs/boom\n\n[node]: https://nodejs.org\n\n[language-support]: https://github.com/nodejs/nodejs.org/commit/d6cdd942a8fc0fffcf6879eca124295e95991bbc#diff-78c12f5adc1848d13b1c6f07055d996eR59\n",
  "readmeFilename": "README.md",
  "remarkConfig": {
    "plugins": [
      "preset-github"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ladjs/i18n.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib",
    "coverage": "nyc report --reporter=text-lcov > coverage.lcov && codecov",
    "lint": "xo && remark . -qfo",
    "precommit": "lint-staged && npm test",
    "test": "npm run build && npm run lint && npm run test-coverage",
    "test-coverage": "cross-env NODE_ENV=test nyc ava",
    "watch": "babel src --watch --out-dir lib"
  },
  "version": "0.2.0",
  "xo": {
    "extends": "prettier",
    "plugins": [
      "prettier"
    ],
    "parserOptions": {
      "sourceType": "script"
    },
    "rules": {
      "prettier/prettier": [
        "error",
        {
          "singleQuote": true,
          "bracketSpacing": true,
          "trailingComma": "none"
        }
      ],
      "max-len": [
        "error",
        {
          "code": 80,
          "ignoreUrls": true
        }
      ],
      "capitalized-comments": "off",
      "camelcase": "off",
      "no-warning-comments": "off"
    },
    "space": true
  }
}
